<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name=".__N____E____T_____F__ramework" xml:space="preserve">
    <value>.NET Framework</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Add_question_to_new_slide" xml:space="preserve">
    <value>Add question to new slide</value>
  </data>
  <data name="Add_question_to_this_slide" xml:space="preserve">
    <value>Add question to this slide</value>
  </data>
  <data name="Answer_option_amount:" xml:space="preserve">
    <value>Answer option amount:</value>
  </data>
  <data name="An_error_occured:" xml:space="preserve">
    <value>An error occured:</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Choose_a_question_type_and_enter_the_question_text:" xml:space="preserve">
    <value>Choose a question type and enter the question text:</value>
  </data>
  <data name="Communication_Error" xml:space="preserve">
    <value>Communication Error</value>
  </data>
  <data name="Enter_answer_option_text_here." xml:space="preserve">
    <value>Enter answer option text here.</value>
  </data>
  <data name="Enter_the_question_text_here." xml:space="preserve">
    <value>Enter the question text here.</value>
  </data>
  <data name="Estimation" xml:space="preserve">
    <value>Estimation</value>
  </data>
  <data name="Evaluation" xml:space="preserve">
    <value>Evaluation</value>
  </data>
  <data name="Finish" xml:space="preserve">
    <value>Finish</value>
  </data>
  <data name="Forward" xml:space="preserve">
    <value>Forward</value>
  </data>
  <data name="Freetext" xml:space="preserve">
    <value>Freetext</value>
  </data>
  <data name="Grading" xml:space="preserve">
    <value>Grading</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="If_this_process_is_canceld,_every_progress_will_be_deleted._Do_you_like_to_continue?" xml:space="preserve">
    <value>If this process is canceld, every progress will be deleted. Do you like to continue?</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="Manage_Quiz" xml:space="preserve">
    <value>Manage Quiz</value>
  </data>
  <data name="Multiple_Choice" xml:space="preserve">
    <value>Multiple Choice</value>
  </data>
  <data name="New_question" xml:space="preserve">
    <value>New question</value>
  </data>
  <data name="Please_select_a_slide" xml:space="preserve">
    <value>Please select a slide</value>
    <comment>Bitte w√§hlen Sie eine Folie</comment>
  </data>
  <data name="Set_question" xml:space="preserve">
    <value>Set questiontext</value>
  </data>
  <data name="Set_the_answer_option(s)" xml:space="preserve">
    <value>Set answers</value>
  </data>
  <data name="Single_Choice" xml:space="preserve">
    <value>Single Choice</value>
  </data>
  <data name="Survey" xml:space="preserve">
    <value>Survey</value>
  </data>
  <data name="True|False" xml:space="preserve">
    <value>True|False</value>
  </data>
  <data name="Unable_to_add_new_slide" xml:space="preserve">
    <value>Unable to add a new slide</value>
  </data>
  <data name="Which_type_of_question_do_you_want_to_ask?_Arsnova.voting_is_the_serious,_grown_up_one_while_arsnova.click_is_faster,_more_colorful_and_crammed_up_with_gamification." xml:space="preserve">
    <value>Which type of question do you want to ask? Arsnova.voting is the serious, grown up one while arsnova.click is faster, more colorful and crammed up with gamification.</value>
  </data>
  <data name="Yes|No" xml:space="preserve">
    <value>Yes|No</value>
  </data>
  <data name="Is_true" xml:space="preserve">
    <value>Is true</value>
  </data>
  <data name="Position" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="Text" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="does_not_apply" xml:space="preserve">
    <value>does not apply</value>
  </data>
  <data name="good" xml:space="preserve">
    <value>good</value>
  </data>
  <data name="inadequate" xml:space="preserve">
    <value>inadequate</value>
  </data>
  <data name="insufficient" xml:space="preserve">
    <value>insufficient</value>
  </data>
  <data name="neither" xml:space="preserve">
    <value>neither</value>
  </data>
  <data name="rather_applies" xml:space="preserve">
    <value>rather applies</value>
  </data>
  <data name="satisfying" xml:space="preserve">
    <value>satisfying</value>
  </data>
  <data name="strongly_disagree" xml:space="preserve">
    <value>strongly disagree</value>
  </data>
  <data name="sufficient" xml:space="preserve">
    <value>sufficient</value>
  </data>
  <data name="totally_agree" xml:space="preserve">
    <value>totally agree</value>
  </data>
  <data name="very_good" xml:space="preserve">
    <value>very good</value>
  </data>
  <data name="If_this_value_is_changed,_other_Session-Properties_like_the_answer_options_or_the_question_type_will_be_reseted._Do_you_want_to_continue?" xml:space="preserve">
    <value>If this value is changed, other Session-Properties like the answer options will be reseted. Do you want to continue?</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="Correct_value" xml:space="preserve">
    <value>Correct value</value>
  </data>
  <data name="Grade-_and_evaluation_questions_own_predefined_answer_options._No_manipulation_possible." xml:space="preserve">
    <value>Grade- and evaluation questions own predefined answer options. No manipulation possible.</value>
  </data>
  <data name="Maximum_range" xml:space="preserve">
    <value>Maximum range</value>
  </data>
  <data name="Minimum_range" xml:space="preserve">
    <value>Minimum range</value>
  </data>
  <data name="False" xml:space="preserve">
    <value>False</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="True" xml:space="preserve">
    <value>True</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Can't_create_session,_hashtag_is_already_taken" xml:space="preserve">
    <value>Can't create session, hashtag is already taken.</value>
  </data>
  <data name="Error_during_session_setup" xml:space="preserve">
    <value>Error during session setup</value>
  </data>
  <data name="Hashtag_already_taken." xml:space="preserve">
    <value>Hashtag already taken.</value>
  </data>
  <data name="Hashtag_is_needed." xml:space="preserve">
    <value>Hashtag is needed.</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="Do_you_really_want_to_cancel_and_rewind_all_current_changes?" xml:space="preserve">
    <value>Do you really want to cancel and rewind all current changes?</value>
  </data>
  <data name="Do_you_really_want_to_delete_this_question?" xml:space="preserve">
    <value>Do you really want to delete this question?</value>
  </data>
  <data name="Question_overview" xml:space="preserve">
    <value>Question overview</value>
  </data>
  <data name="Question" xml:space="preserve">
    <value>Question</value>
  </data>
  <data name="Slide" xml:space="preserve">
    <value>Slide</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Decide_whether_you_want_your_listeners_to_use_the_grown_up_arsnova_voting_app_or_the_fancy_arsnova_click_one." xml:space="preserve">
    <value>Decide whether you want your listeners to use the grown up arsnova voting app or the fancy arsnova click one.</value>
  </data>
  <data name="Set_session_type" xml:space="preserve">
    <value>Set Session type</value>
  </data>
  <data name="Delete_a_already_existing_quiz." xml:space="preserve">
    <value>Delete a already existing quiz.</value>
  </data>
  <data name="Edit_a_already_existing_quiz." xml:space="preserve">
    <value>Edit a already existing quiz.</value>
  </data>
  <data name="Start_quiz" xml:space="preserve">
    <value>Start quiz</value>
  </data>
  <data name="Results" xml:space="preserve">
    <value>Results</value>
  </data>
  <data name="Manage_session" xml:space="preserve">
    <value>Manage session</value>
  </data>
  <data name="Adds_a_question_an_multiple_new_slides._They_are_fully_styled_and_ready-to-use." xml:space="preserve">
    <value>Adds a question an multiple new slides. They are fully styled and ready-to-use.</value>
  </data>
  <data name="Adds_a_question_to_the_current_slide,_you_have_to_style_it_by_your_own." xml:space="preserve">
    <value>Adds a question to the current slide, you have to style it by your own.</value>
  </data>
  <data name="Add_multiple_slides_with_a_complete_quiz." xml:space="preserve">
    <value>Add a quiz on new slides.</value>
  </data>
  <data name="Add_new_question_to_this_slide" xml:space="preserve">
    <value>Add new question to this slide</value>
  </data>
  <data name="An_overview_above_all_questions_and_the_possibility_to_edit_or_delete_them." xml:space="preserve">
    <value>An overview above all questions and the possibility to edit or delete them.</value>
  </data>
  <data name="Manage_questions" xml:space="preserve">
    <value>Manage questions</value>
  </data>
  <data name="join the hashtag:" xml:space="preserve">
    <value>join the hashtag:</value>
  </data>
  <data name="This presentation uses" xml:space="preserve">
    <value>This presentation uses</value>
  </data>
</root>